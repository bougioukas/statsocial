# Descriptive statistics {#sec-descriptive}

```{r}
#| include: false

library(tidyverse)
library(here)
library(kableExtra)

library(fontawesome)
library(scales)
library(ggsci)
library(ggpubr)
library(MESS)
library(questionr)

library(readxl)
rses1 <- read_excel(here("data", "rses1.xlsx"))
rses1$sex <- factor(rses1$sex, labels = c("male", "female"))
rses1$Score_cat <- factor(rses1$Score_cat, levels = c("low", "medium", "high"))
```

When we have finished this chapter, we should be able to:

::: {.callout-caution icon="false"}
## `r fa("circle-dot", prefer_type = "regular", fill = "red")` Learning objectives

-   Use frequency counts and percentages to describe categorical variables.
-   Display frequency distributions for categorical variables using bar plots.
-   Use statistical measures such as mean, median, standard deviation and interquartile range to describe numerical variables.
-   Generate and assess visualizations like histograms, density plots, and box plots to understand the distribution and spread of numerical data.
:::

 

## Data

We will explore a dataset containing 258 participants (rows) and 8 variables (columns). The variables include sex (female/male), age (in years), time spent on the internet and social media (in hours), the total score (0-30) from responses to 10 questions on the Rosenberg Self-Esteem Scale ([RSES](https://socy.umd.edu/about-us/using-rosenberg-self-esteem-scale)), and the categorization of that score into three levels: low (0-15), medium (16-19), and high (20-30) level of self-esteem [@garcía2019].

 

```{r}
#| echo: false
#| message: false

DT::datatable(
  rses1, extensions = 'Buttons', options = list(
    dom = 'tip'
  )
)

```

 

## Summarizing categorical data (Frequency Statistics)

### One variable tables

The first step in analyzing a categorical variable is to count the occurrences of each label and calculate their frequencies. The resulting collection of these frequencies for all possible categories is known as the **frequency distribution** of the variable. We can also express the frequencies as **proportions** of the total number of observations, which are called relative frequencies or **percentages** (%).

**Sex variable**

Let's create a a frequency table for the `sex` variable:

![frequency table for the sex variable.](images/tb001.png){#fig-tb001 width="65%"}

The table displays the following:

-   **Absolute frequency (n):** The number of participants in each category (male: 109, female: 149).

-   **Percentage (%):** The proportion of participants in each category relative to the total number of participants (relative frequency) multiplied by $100\%$ (male: $109/258 \times 100\% = 42.2\%$, female: $149/258 \times 100\% = 57.8\%$).

-   **Cumulative percentage (%):** The sum of the percentage contributions of all categories up to and including the current one (male: 42.2%, male plus female: 42.2% + 57.8% = 100%).

Note that the percentages in both "$\%$" and "$cum\%$" columns of the table sum up to 100%.

 

**Score_cat variable (self-esteem)**

Similarly, we can create the frequency table for the `Score_cat` (self-esteem) variable:

![Frequency table for the the levels of self-esteem variable](images/tb002.png){#fig-tb002 width="65%"}

In the above table, we observe that 40.3% (104 out of 258) of participants have low level of self-esteem.

 

### Two variable tables (Contingency tables)

**A. Frequency contingency table**

In addition to tabulating each categorical variable separately, we might be interested in the distribution of self-esteem levels (categorized as low, medium, and high) among male and female participants in the dataset. This can be achieved by creating a frequency **contingency table**, as shown in @fig-tb0. Each cell value in the table represents the number of occurrences (or frequency) corresponding to the combination of categories from the two different variables.

![Frequency contingency table. Each cell value in the table represents the count corresponding to the combination of categories from the two variables.](images/tb0.png){#fig-tb0 width="70%"}

**Note:** The table also typically includes **row and column totals**, also known as marginal totals, that sum the counts for each row and column, respectively.

 

**B. Joint distribution contingency table**

A **joint distribution** contingency table displays both the frequency of observations across categories of two variables and the **percentage distributions** of those frequencies. The percentages are calculated by dividing the frequency in each cell by the **overall total** (258), then multiplying the result by 100. This shows the percentage of the total observations that fall into each category combination.

![Joint distribution contingency table. The percentages are calculated by dividing the frequency in each cell by the overall total.](images/tb1.png){#fig-tb1 width="75%"}

 

**C. Conditional distribution contingency table**

Suppose we are interested in the distribution of self-esteem for each sex. Since we are **conditioning** on sex, we divide each cell's frequency by the corresponding **row total** (row marginal total), rather than the overall total. This approach allows us to observe the conditional distribution of self-esteem levels within each sex group. For example, the percentage of participants with low-level self-esteem, given that the participant is female, is approximately (78/149) x 100 ≈ 52.3%.

![Conditional distribution contingency table. The percentages are calculated by dividing the frequency in each cell by the row marginal total.](images/tb2.png){#fig-tb2 width="75%"}

This data indicates notable differences in self-esteem levels between male and female participants. Specifically, the percentage of female participants with low self-esteem (52.3%) is substantially greater than that of male participants (23.9%).

## Displaying categorical data

While frequency tables are extremely useful, the best way to investigate a dataset is to plot it. For categorical variables, such as `sex` and `Score_cat`, it is straightforward to present the number in each category, usually indicating the frequency and the percentage of total number of participants. When shown graphically this is called a **bar plot**.

### Simple bar plot

A simple bar plot is a common data visualization for comparing categories in a single variable. @fig-simplebar0 illustrates the frequency distribution of levels of self-esteem. The horizontal axis (*x-axis*) displays the different self-esteem categories, ordered according to increasing self-esteem levels, while the vertical axis (y-axis) shows the frequency of each category.

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-simplebar0
#| fig-cap: Bar plot showing the frequency distribution of the levels of self-esteem.
#| fig-width: 5
#| fig-height: 4.5

# create a data frame with self-esteem categories and their counts
dat0 <- rses1 |> 
  count(Score_cat)

# plot the data
ggplot(dat0, aes(x = Score_cat, y = n)) +
  geom_col(width=0.65, fill = "#0073C2") +
  geom_text(aes(label=n),
            vjust=1.6, color = "white", size = 3.5) +
  labs(x = "Self-esteem", y = "Frequency") +
  theme_minimal(base_size = 14)
```

\vspace{15pt}

If the y-axis represents percentages (%), then each bar's height corresponds to the percentage of participants in that category. For example, the percentage of participants classified as with low self-esteem is 40.2% (172/428).

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-simplebar01
#| fig-cap: Bar plot showing the percentage of participants for each level of self-esteem.
#| fig-width: 5
#| fig-height: 4.5


# create a data frame with self-esteem categories, their counts, and percentages
dat1 <- dat0 |> 
  mutate(pct = round_percent(n, 1))

# plot the data
ggplot(dat1, aes(x = Score_cat, y = pct)) +
  geom_col(width=0.65, fill = "#0073C2") +
  geom_text(aes(label=paste0(pct, "%")),
            vjust=1.6, color = "white", size = 3.5) +
  labs(x = "Self-esteem category", y = "Percentage") +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  theme_minimal(base_size = 14)
```

::: callout-important
## Tips for a simple bar plot

-   All bars should have equal width and equal spacing between them.
-   The height of each bar should correspond to the data it represents.
-   The bars should be plotted against a common zero-valued baseline.
:::

\vspace{10pt}

### Side-by-side and grouped bar plots

If the data are further classified based on the participant's `sex`, it becomes impractical to present this information to a single bar plot. In such cases, a side-by-side bar plot (@fig-sidebar) or, even better, a grouped bar plot (@fig-groupbar) can facilitate easier visual comparisons.

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-sidebar
#| fig-cap: Side-by-side bar plot showing by self-esteem category and sex.
#| fig-width: 7
#| fig-height: 5.5

# create a data frame with ordered BMI categories and their counts by sex
dat2 <- rses1 |> 
  count(Score_cat, sex) |>  
  group_by(sex) |> 
  mutate(pct = round_percent(n, 1)) |> 
  ungroup()

ggplot(dat2) + 
  geom_col(aes(Score_cat, pct, fill = sex), width = 0.7, position = "dodge") +
  geom_text(aes(Score_cat, pct, label = paste0(pct, "%"), 
                group = sex), color = "white", size = 3.5, vjust=1.2,
            position = position_dodge(width = .9)) +
  labs(x = "Self-esteem category", y = "Percentage") +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  scale_fill_jco() +
  theme_minimal(base_size = 14) +
  theme(legend.position="none",
        axis.text.x = element_text(angle = 45, hjust = 1)) +
  facet_wrap(~sex, ncol = 2)
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-groupbar
#| fig-cap: Grouped bar plot showing by self-esteem category and sex.
#| fig-width: 8
#| fig-height: 5

ggplot(dat2) + 
  geom_col(aes(Score_cat, pct, fill = sex), width = 0.8, position = "dodge") +
  geom_text(aes(Score_cat, pct, label = paste0(pct, "%"), 
                group = sex), color = "white", size = 3.5, vjust=1.2,
            position = position_dodge(width = .9)) +
  labs(x = "Self-esteem", y = "Percentage") +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  scale_fill_jco() +
  theme_minimal(base_size = 14)

```

### Stacked bar plot

Unlike side-by-side or grouped bar plots, **stacked bar plots** segment their bars. A **100% Stack Bar Plot** displays the percentage-of-the-whole of each group, making it easier to discern relative differences between quantities within each group (@fig-stackbar).

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-stackbar
#| fig-cap: A horizontal stacked bar plot showing the distribution of self-esteem stratified by sex.
#| fig-width: 8
#| fig-height: 2.5

# create a data frame with BMI categories and their counts by sex
dat3 <- rses1 |> 
  group_by(sex) |> 
  count(Score_cat) |> 
  mutate(pct = round_percent(n, 2)) |> 
  ungroup()

ggplot(dat3, aes(x = sex, y = pct, fill = forcats::fct_rev(Score_cat)))+
  geom_bar(stat = "identity", width = 0.8)+
  geom_text(aes(label = paste0(round(pct, 1), "%"), y = pct), size = 3,
            position = position_stack(vjust = 0.5)) +
  coord_flip()+
  scale_fill_simpsons() +
  scale_y_continuous(labels = scales::percent_format(scale = 1))+
  labs(x = "Sex", y = "Percentage", fill = "Self-esteem category") +
  theme_minimal(base_size = 10)
```

\vspace{10pt}

::: callout-warning
## Caution

One consideration when using stacked bar plots is the number of variable levels: with many categories, stacked bar plots can become confusing.
:::
